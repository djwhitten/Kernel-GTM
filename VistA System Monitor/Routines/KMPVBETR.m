KMPVBETR ;SP/JML - VBEM Nightly compression and transmission;2020-01-10  11:45 AM; ;Jan 13, 2020@17:17
 ;;4.0;CAPACITY MANAGEMENT;**10001**;3/1/2018;Build 38
 ; Original Code by Department of Veterans Affairs in Public Domain
 ; *10001* (c) Sam Habiel 2020
 ; Changes licensed under Apache 2.0.
 ;
 ;
EN ;  Format and send data to CPE once a day -- TASKED VIA TASKMAN
 ;-----------------------------------------------------------------------
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",$J)............. temporary storage for daily VBEM data to be transmitted
 ; ^KMPTMP("KMPV","VBEM","COMPRESS",KMPHDAY)........ temporary storage for compressed data prior to transmission
 ; Data in "DLY" node is deleted upon compression
 ; Data in "TRANSMIT" node is deleted upon transmission
 ; Data in "COMPRESS" node:
 ;    IF DATA MORE THAN 7 DAYS OLD SEND ERROR MESSAGE TO CPE GROUP AND DELETE DATA
 ;    IF DATA MORE THAN 1 DAY OLD SEND WARNING MESSAGE TO CPE GROUP AND SEND DATA
 ;    IF DATA 1 DAY OLD SEND DATA
 ;-----------------------------------------------------------------------
 ;
 N KMPVCFG,KMPVDATA,KMPVFMDAY,KMPVHDAY,KMPVHLAST,KMPVHSTRT,KMPVHTODAY,KMPVHYDAY,KMPVI,KMPVJ,KMPVJTOT
 N KMPVKEEP,KMPVLAST,KMPVLN,KMPVNODE,KMPVOPT,KMPVRT,KMPVSINF,KMPVSITE,KMPVTIME,KMPVUTOT,KMPVWD
 N %H,ZTREQ,ZTSTOP
 ; ALWAYS - verify data is not building past configured number of days - if so for any reason, delete it
 D PURGEDLY^KMPVCBG("VBEM")
 ;
 K ^KMPTMP("KMPV","VBEM","TRANSMIT",$J) S U="^"
 S KMPVHSTRT=$H,KMPVHTODAY=+KMPVHSTRT,KMPVSITE=$$SITE^VASITE  ; IA 10112
 S KMPVHYDAY=+$H-1
 S KMPVLAST=$$GETVAL^KMPVCCFG("VBEM","LAST START TIME",8969,"I")
 I KMPVLAST'="" D
 .S X=KMPVLAST D H^%DTC S KMPVHLAST=%H
 .I KMPVHLAST<KMPVHYDAY,KMPVHLAST'="" D CANMESS^KMPVCBG("JOBLATE","VBEM",KMPVSITE,(KMPVHYDAY-KMPVHLAST))
 ;
 S KMPVKEEP=$$GETVAL^KMPVCCFG("VBEM","DAYS TO KEEP DATA",8969)
 S KMPVSINF=$$SITEINFO^KMPVCCFG()
 ;
 ; COMPRESS DATA - REMOVE $J SPECIFICITY - KILL 'DLY' NODE
 S KMPVHDAY=""
 F  S KMPVHDAY=$O(^KMPTMP("KMPV","VBEM","DLY",KMPVHDAY)) Q:(KMPVHDAY="")!(KMPVHDAY>KMPVHYDAY)  D
 .S KMPVNODE=""
 .F  S KMPVNODE=$O(^KMPTMP("KMPV","VBEM","DLY",KMPVHDAY,KMPVNODE)) Q:KMPVNODE=""  D
 ..S KMPVTIME=""
 ..F  S KMPVTIME=$O(^KMPTMP("KMPV","VBEM","DLY",KMPVHDAY,KMPVNODE,KMPVTIME)) Q:KMPVTIME=""  D
 ...S KMPVOPT=""
 ...F  S KMPVOPT=$O(^KMPTMP("KMPV","VBEM","DLY",KMPVHDAY,KMPVNODE,KMPVTIME,KMPVOPT)) Q:KMPVOPT=""  D
 ....S KMPVJ="",KMPVDATA="",KMPVJTOT="",KMPVUTOT=0
 ....F  S KMPVJ=$O(^KMPTMP("KMPV","VBEM","DLY",KMPVHDAY,KMPVNODE,KMPVTIME,KMPVOPT,KMPVJ)) Q:KMPVJ=""  D
 .....S KMPVDATA=$G(^KMPTMP("KMPV","VBEM","DLY",KMPVHDAY,KMPVNODE,KMPVTIME,KMPVOPT,KMPVJ))
 .....F KMPVI=1:1:6 S $P(KMPVJTOT,"^",KMPVI)=$P(KMPVDATA,"^",KMPVI)+$P(KMPVJTOT,"^",KMPVI)
 .....S KMPVUTOT=KMPVUTOT+1
 ....S ^KMPTMP("KMPV","VBEM","COMPRESS",KMPVHDAY,KMPVNODE,KMPVOPT,KMPVTIME)=KMPVJTOT_"^"_KMPVUTOT
 .K ^KMPTMP("KMPV","VBEM","DLY",KMPVHDAY)  ; Kill 'daily' node once all data compiled in 'compress' node
 .I $$S^%ZTLOAD G TASKSTOP
 ;
 ; PROCESS 'COMPRESS' NODE FOR TRANSMISSION
 S KMPVHDAY=""
 F  S KMPVHDAY=$O(^KMPTMP("KMPV","VBEM","COMPRESS",KMPVHDAY)) Q:KMPVHDAY=""  D
 .; IF OLDER THAN 'X' DAYS AND NOT MARKED AS SENT SEND ERROR MESSAGE, KILL NODE AND GO TO NEXT DAY
 .I KMPVHDAY<(KMPVHTODAY-KMPVKEEP) D  Q
 ..D CANMESS^KMPVCBG("DELETE","VBEM",KMPVSITE,KMPVHDAY)
 ..K ^KMPTMP("KMPV","VBEM","COMPRESS",KMPVHDAY),^KMPTMP("KMPV","VBEM","DLY",KMPVHDAY)
 .S KMPVFMDAY=+$$HTFM^XLFDT(KMPVHDAY,1)
 .S KMPVWD=$$WORKDAY^XUWORKDY(KMPVFMDAY)  ; IA #10046
 .; RETRANSMISSION FLAG: GREATER THAN ZERO MEANS MESSAGE WAS SENT TO CPE BUT ACK MESSAGE NOT YET REC'D
 .S KMPVRT=$S(+$G(^KMPTMP("KMPV","VBEM","COMPRESS",KMPVHDAY))>0:"YES",1:"NO")
 .; IF BETWEEN 1 AND 7 DAYS OLD AND NOT TRANSMITTED SEND WARNING MESSAGE AND ATTEMPT TO TRANSMIT AGAIN
 .I KMPVHDAY<(KMPVHTODAY-1) D CANMESS^KMPVCBG("TRANWARN","VBEM",KMPVSITE,KMPVHDAY)
 .K ^KMPTMP("KMPV","VBEM","TRANSMIT",$J)
 .S KMPVLN=1
 .S ^KMPTMP("KMPV","VBEM","TRANSMIT",$J,KMPVLN)="SYSTEM ID="_KMPVSINF,KMPVLN=KMPVLN+1
 .S ^KMPTMP("KMPV","VBEM","TRANSMIT",$J,KMPVLN)="UPDATE CONFIG="_KMPVHDAY_U_KMPVWD_"^DAILY",KMPVLN=KMPVLN+1
 .S ^KMPTMP("KMPV","VBEM","TRANSMIT",$J,KMPVLN)="SYSTEM CONFIG="_$$SYSCFG^KMPVCCFG(),KMPVLN=KMPVLN+1
 .S ^KMPTMP("KMPV","VBEM","TRANSMIT",$J,KMPVLN)="MONITOR CONFIG="_$$CFGSTR^KMPVCCFG("VBEM"),KMPVLN=KMPVLN+1
 .S ^KMPTMP("KMPV","VBEM","TRANSMIT",$J,KMPVLN)="RETRANSMISSION="_KMPVRT,KMPVLN=KMPVLN+1
 .S KMPVNODE=""
 .F  S KMPVNODE=$O(^KMPTMP("KMPV","VBEM","COMPRESS",KMPVHDAY,KMPVNODE)) Q:KMPVNODE=""  D
 ..S KMPVOPT=""
 ..F  S KMPVOPT=$O(^KMPTMP("KMPV","VBEM","COMPRESS",KMPVHDAY,KMPVNODE,KMPVOPT)) Q:KMPVOPT=""  D
 ...S KMPVTIME=""
 ...F  S KMPVTIME=$O(^KMPTMP("KMPV","VBEM","COMPRESS",KMPVHDAY,KMPVNODE,KMPVOPT,KMPVTIME)) Q:KMPVTIME=""  D
 ....S KMPVDATA=$G(^KMPTMP("KMPV","VBEM","COMPRESS",KMPVHDAY,KMPVNODE,KMPVOPT,KMPVTIME))
 ....S ^KMPTMP("KMPV","VBEM","TRANSMIT",$J,KMPVLN)="VBEM DATA="_KMPVNODE_U_KMPVOPT_U_KMPVTIME_U_KMPVDATA,KMPVLN=KMPVLN+1
 .D TRANSMIT
 .I $$S^%ZTLOAD G TASKSTOP
 D STRSTP^KMPVCCFG("VBEM",KMPVHSTRT)
 ;  Let TaskMan know the job is complete
 S ZTREQ="@"
 Q
 ;
TRANSMIT ; Transmit data
 ; quit if no data to transmit.
 Q:'$D(^KMPTMP("KMPV","VBEM","TRANSMIT",$J))
 ;
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,1)="SYSTEM ID=PLATINUM^050^DEMO.OSEHRA.ORG^Test^VAH"
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,2)="UPDATE CONFIG=65386^1^DAILY"
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,3)="SYSTEM CONFIG=Linux x86_64^UNIX^6.3-007^Test"
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,4)="MONITOR CONFIG=VBEM^ON^1^3180501^7^15^1D^T+1@0115^YES^^KMPV VBEM DATA TRANSMISSION"
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,5)="RETRANSMISSION=NO"
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,6)="VBEM DATA=ibis:ibis^!HL AUTOSTART LINK MANAGER***^5400^6^40^0^0^7271^8.05393^4"
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,7)="VBEM DATA=ibis:ibis^!HL AUTOSTART LINK MANAGER***^6300^2^20^0^0^760^1220.030562^2"
 ; ...
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,54)="VBEM DATA=ibis:ibis^$XQ MENU DRIVER$***^33300^1^0^0^0^106^286.507907^1"
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,55)="VBEM DATA=ibis:ibis^EVE***^32400^1^0^0^0^23^.000495^1"
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,56)="VBEM DATA=ibis:ibis^EVE***^33300^1^0^0^0^25^.000495^1"
 ; ^KMPTMP("KMPV","VBEM","TRANSMIT",15140,57)="VBEM DATA=ibis:ibis^XTCM MAIN***^32400^1^0^0^0^25^.000154^1"
 I '$$VA^KMPVLOG D  ; *10001*
 . N H S H="node^vista object^time section (sec since mid)^times invoked^"
 . S H=H_"cpu time(ms)^lines^comamnds^global references^elapsed time(ms)^"
 . S H=H_"# of distinct jobs"
 . D HEAD^KMPVLOG(H,"KMPV","VBEM",1)
 . N I S I=5
 . N C S C=0
 . N OUT
 . N L
 . F  S I=$O(^KMPTMP("KMPV","VBEM","TRANSMIT",$J,I)) Q:'I  S L=^(I) D  ;**NAKED
 .. N D S D=$P(L,"VBEM DATA=",2)
 .. S C=C+1,OUT(C)=D
 . D EN^KMPVLOG($NA(OUT),"KMPV","VBEM","A",1)
 E  D  ; Else added *10001*. Rest of block is original code.
 . N KMPVEMAIL,X,XMSUB,XMTEXT,XMY,XMZ
 . ; send packman message.
 . S XMTEXT="^KMPTMP(""KMPV"",""VBEM"",""TRANSMIT"","_$J_","
 . S XMSUB="VBEM DAILY DATA"
 . S KMPVEMAIL=$$GETVAL^KMPVCCFG("VBEM","NATIONAL DATA EMAIL ADDRESS",8969) I KMPVEMAIL'="" S XMY(KMPVEMAIL)=""
 . D ^XMD
 . ; RECORD SUCCESS/FAILURE -- SEND MESSAGE IF FAILURE
 . I +$G(XMZ)>0 D
 . .S ^KMPTMP("KMPV","VBEM","COMPRESS",KMPVHDAY)=XMZ
 . E  D CANMESS^KMPVCBG("FAILTRAN","VBEM",KMPVSITE,KMPVHDAY)
 K ^KMPTMP("KMPV","VBEM","TRANSMIT",$J)
 Q
 ;
TASKSTOP ; Clean-up code if task Stopped via TaskMan
 D STRSTP^KMPVCCFG("VBEM",KMPVHSTRT)
 ;  Let TaskMan know the job is complete
 S ZTREQ="@"
 S ZTSTOP=1
 Q
